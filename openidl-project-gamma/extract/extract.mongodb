use('campusInsurance');
//works, returns proper raw dataset: group1, filename: polisy.json
db.policy.aggregate([
  {
     $match: { "Coverages.1.CoverageRecords.AccountingDate" : { $gte: "2020-01-01"} }
  },
  {
    $match: { "Coverages.1.CoverageRecords.AccountingTermExpiration" : { $lte: "2020-03-01"} }
  }
])


use('openIDL')
let start = "2020-02-01"
let end = "2021-01-01"
db.insurance.find({"TransactionCode": {$in: ['2','3','6','7']}})

use('openIDL')
let start = "2020-02-01"
let end = "2021-01-01"
db.insurance.find({$and: [{"TransactionCode": {$in: ['2','3','6','7']}},
{"Coverages.1.CoverageRecords.AccountingDate": {$lt: start}},
{"Coverages.1.CoverageRecords.AccountingTermExpiration": {$lt:end }}]})

use('openIDL')
let start = "2013-01-01"
let end = "2022-01-01"
db.insurance.find({"TransactionCode": "2"})

use('openIDL')
let start = "2013-01-01"
let end = "2022-01-01"
db.insurance.find({"Claim.AccidentDate": "2013-09-01"})

use('openIDL')
let start = "2013-01-01"
let end = "2022-01-01"
db.insurance.find({$and: [{"TransactionCode": "2"}
,{"Claim.AccidentDate": "2013-09-01"}]})

use('openIDL')
let start = "2013-01-01"
let end = "2022-01-01"
db.insurance.find({"Claim.AccidentDate": {$gt: start}})

use('openIDL')
let start = "2013-01-01"
let end = "2022-01-01"
db.insurance.find({$and: [{"TransactionCode": "2"}
,{"Claim.AccidentDate": {$gt: start}}]})

////






//returns earned premium as zero
use('campusInsurance');
db.policy.aggregate([
  {
     $match: { "Coverages.1.CoverageRecords.AccountingDate" : { $gte: "2020-01-01"} }
  },
  {
    $match: { "Coverages.1.CoverageRecords.AccountingTermExpiration" : { $lte: "2020-03-01"} }
  },
  {
    $group: { _id: "$Coverages.1.Coverage", earnedPremium: {$sum: "$Coverages.1.CoverageRecords.PremiumAmount"}}
  }
  ]
)

//note in mongodb Type(PremiumAmount) = int32
