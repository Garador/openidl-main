
use('openIDL');
db.insurance.find({"RecordType" : "Premium"})

use('openIDL');
db.insurance.find({"Policy.PolicyIdentifier": "A131 779"})

use('openIDL');
db.insurance.find({"Policy.PolicyIdentifier": "A138 152"})

use('openIDL');
db.insurance.find({
    "Policy.PremiumAmount" :{
        "$gt": 0
    },
    "Policy.PremiumAmount": {
        "$lt": 500
    }
})
use('openIDL');
db.policy.replaceOne({"PolicyIdentifier": 'A135 261'}
                , {
  "PolicyIdentifier": "A135 261",
  "State": "CT",
  "PersonalAuto": {
    "ZipCode": "06384",
    "ZipCodeSuffix": "",
    "Coverages": {
      "1": {
        "CoverageCategory": "Liability",
        "Coverage": "Bodily Injury Liability",
        "CoverageRecords": [
          {
            "AccountingDate": "2022-01-01",
            "PremiumAmount": -12.4,
            "LiabilityLimitsName": "Limits",
            "LiabilityLimitsAmount": "$250,000/500,000",
            "Exposure": 0,
            "MonthsCovered": 3,
            "SingleMultiCarRating": "Single Car Rated",
            "Terrorism": "N/A",
            "Packaging": "Auto coverage written as a separate policy and not an endorsement to another policy.",
            "PoolAffiliation": "Preferred Risk",
            "UMUIMStacking": "N/A",
            "PassiveRestraintDiscount": "Not Applicable",
            "AntiLockBrakesDiscount": "Anti-Lock Braking System discount applied to this coverage.",
            "DefensiveDriverDiscount": "Driver does not qualify for the defensive driver discount available on this coverage."
          }
        ]
      },
      "2": {
        "CoverageCategory": "Liability",
        "Coverage": "Property Damage Liability",
        "CoverageRecords": [
          {
            "AccountingDate": "2022-01-01",
            "PremiumAmount": -3.5,
            "LiabilityLimitsName": "State Statutory Basic Limits Through",
            "LiabilityLimitsAmount": "$100,000",
            "Exposure": 0,
            "MonthsCovered": 3,
            "SingleMultiCarRating": "Single Car Rated",
            "Terrorism": "N/A",
            "Packaging": "Auto coverage written as a separate policy and not an endorsement to another policy.",
            "PoolAffiliation": "Preferred Risk",
            "UMUIMStacking": "N/A",
            "PassiveRestraintDiscount": "Not Applicable",
            "AntiLockBrakesDiscount": "Anti-Lock Braking System discount applied to this coverage.",
            "DefensiveDriverDiscount": "Driver does not qualify for the defensive driver discount available on this coverage."
          }
        ]
      }
    }
  }
}           
  )

use('openIDL')
db.policy.find({'PersonalAuto': {$exists:true}})


use('openIDL')
db.policy.find({ 'Policy.PolicyIdentifier': 'A135 261',  'Policy.LineOfBusiness': 'Auto'
, 'Subline': 'Private Passenger Auto', 'SublineCategory': 'Personal'})


use('openIDL')
db.insurance.find({'Policy.PolicyIdentifier': 'A135 261','Policy.LineOfBusiness': 'Auto'
, 'Policy.Subline': 'Private Passenger Auto','Policy.SublineCategory': 'Personal'})

use('openIDL')
db.insurance.find({'Policy.PolicyIdentifier': 'A135 261','Policy.LineOfBusiness': 'Auto'})

use('openIDL')
db.insurance.find({'Policy.LineOfBusiness': 'Auto'
, 'Subline': 'Private Passenger Auto', 'SublineCategory': 'Personal'})

use('openIDL')
db.policy.update('')

use('openIDL'); 
db.insurance.count({"RecordType": "Premium"})

use('openIDL'); 
db.insurance.find({})

db.insurance.distinct("Policy.PolicyIdentifier")
db.insurance.distinct("TransactionCode")

use('openIDL'); 
db.insurance.aggregate(
    [ 
        //{$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$group: {_id: "$Policy.PolicyIdentifier", total: {$sum: 1}}}
    ]
)

use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.LineOfBusiness": "Auto"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$group: {_id: "$Policy.PolicyIdentifier", totalPremium: {$sum: "$Policy.PremiumAmount"}, recordCount: { $sum: 1}}},
        {$sort: {recordCount: -1}}
    ]
)

use('openIDL');
db.policy.aggregate(
  [
    {$match: {"Coverages" :  "1"}}
  ]
)


use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.LineOfBusiness": "Auto"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$group: {_id: "$Policy.PolicyIdentifier", totalCoverages: {$distinct: "$Coverage.CoverageCode"}}},
        {$sort: {recordCount: -1}}
    ]
)

use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$group: {_id: "$Policy.PolicyIdentifier", totalPremium: {$sum: "$Policy.PremiumAmount"}, recordCount: { $sum: 1}}},
        {$sort: {"Policy.AccountingDate": 1}}
    ]
)

use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$match: {"Policy.PremiumAmount" : {$lt: 0}}},
        {$sort: {"Policy.AccountingDate": 1}}
    ]
)


use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$match: {"Policy.PremiumAmount" : {$lt: 0}}},
        {$group: {_id: "$Coverage.Coverage", totalRecord: { $sum: 1}}},
        {$sort: {"Policy.AccountingDate": 1}}
    ]
)


use('openIDL'); 
db.insurance.aggregate(
    [ 
        {$match: {"Policy.PolicyIdentifier": "A131 779"}},
        {$match: {"Policy.Subline": "Private Passenger Auto"}},
        {$match: {"Policy.AccountingDate": {$gt:"2020-01-01"}}},
        {$match: {"Policy.AccountingDate": {$lt:"2021-01-01"}}},
        {$group: {_id: "$Policy.AccountingDate", recordCount: {$sum: 1}}},
        {$sort: {"Policy.AccountingDate": 1}}
    ]
)

db.runCommand( { "connPoolStats" : 1 } )
